{"version":3,"sources":["Global.js","theme.js","pages/Home.style.js","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","cardBg","darkTheme","icons","toggleBorder","gradient","navbarBg","inputBg","borderLine","shadow","collapseBg","HeaderLogo","styled","h2","PriceStyle","span","Home","state","query","results","loading","message","handleOnInputChange","event","target","value","setState","fetchSearchResult","url","process","fetch","method","headers","then","res","json","result","console","log","renderSearchResult","ListGroup","map","details","Item","key","id","className","No","Name","Capacity","Quantity","Price","Container","fluid","Row","Col","md","Form","FormControl","placeholder","aria-label","aria-describedby","onChange","this","Component","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.08e98b76.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n    *,\n    *::after,\n    *::before {\n    box-sizing: border-box;\n    }\n\n    body {\n        align-items: center;\n        background: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        margin: 0;\n        padding: 0;\n        transition: all 0.25s linear;\n        font-family: 'Poppins', sans-serif;\n        margin: 0;\n        padding: 0;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .list-group{\n        \n    }\n\n    .list-group-item{\n        background: ${({theme}) => theme.cardBg} !important;\n        color: ${({theme}) => theme.text}\n    }\n  \n`","export const lightTheme = {\n    body: '#f0f2f5',\n    text: '#363537',\n    icons: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)', \n    cardBg: '#ffffff',\n    navbarBg: '#ffffff',\n    inputBg: '#f0f2f5',\n    borderLine: '#3e4042',\n    shadow: '10px 10px 20px #d9d9d9, -10px -10px 20px #ffffff',\n    collapseBg: '#ffffff'\n}\n  \nexport const darkTheme = {\n    body: '#18191a',\n    text: '#e4e6eb',\n    icons: '#e4e6eb',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n    cardBg: '#242526',\n    navbarBg: '#242526',\n    inputBg: '#3a3b3c',\n    borderLine: '#3e4042',\n    shadow: '10px 10px 20px #18191a, -10px -10px 20px #111',\n    collapseBg: '#242526'\n}","import styled from 'styled-components'\n\nexport const HeaderLogo = styled.h2`\n    font-family: 'Playfair Display', serif;\n\n`\nexport const PriceStyle = styled.span`\n    font-size: 1.5em;\n    font-weight: bold;\n`","import React, {Component} from 'react'\nimport {Col, Row, Container, Form, FormControl, ListGroup} from 'react-bootstrap'\n\nimport {HeaderLogo, PriceStyle} from './Home.style'\n\nclass Home extends Component {\n    state = {\n        query: '',\n        results: [],\n        loading: false,\n        message: ''\n    };\n    handleOnInputChange = (event) => {\n        const query = event.target.value;\n        if(!query){\n            this.setState({ loading: false, message: ''  } );\n        }else{\n            this.setState({ query, loading: true, message: ''  }, ()=>{\n                this.fetchSearchResult(this.state.query)\n            })\n        }\n    }\n\n    fetchSearchResult = (query) => {\n        let url = process.env.REACT_APP_STOCK_SEARCH+`?name=${query}`\n        fetch(url,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                console.log(result)\n                this.setState({\n                    loading: false,\n                    results: result\n                });\n            }\n        )\n    }\n\n    renderSearchResult = () => {\n        const {results} = this.state\n            return(\n                <ListGroup >\n                    {\n                        results.map( details => {\n                            return(\n                                <ListGroup.Item key={details.id}>\n                                    <div className={\"d-flex flex-row align-items-center\"}>\n                                        <div className={\"d-flex flex-column\"}>\n                                            <div>\n                                                <span className={\"mr-3\"}>{details.No}</span><strong>{details.Name}</strong>\n                                            </div>\n                                            <small>\n                                                <span className={\"mr-3\"}>Capacity: {details.Capacity}</span>\n                                                <span className={\"mr-3\"}>Available: {details.Quantity}</span>\n                                            </small>\n                                        </div>\n                                        <div className={\"d-flex ml-auto\"}>\n                                            <div className={\"ml-auto\"}>\n                                                <PriceStyle>â‚¹ {details.Price}</PriceStyle>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                </ListGroup.Item>\n                            )\n                        })\n                    }\n                </ListGroup>\n            )\n    }\n\n    render(){\n        // const { query, loading, message, currentPageNo, totalPages } = this.state;\n\n        return(\n            <Container fluid>\n                <Row>\n                    <Col className=\"mx-auto\">\n                        <HeaderLogo className={\"text-center\"}>Rayhan</HeaderLogo>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"6\" className={\"mx-auto mt-5\"}>\n                        <Form>\n                            <FormControl placeholder=\"Enter Product Name\" aria-label=\"Enter Product Name\" aria-describedby=\"basic-addon2\"\n                            onChange={this.handleOnInputChange}\n                            />\n                        </Form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"6\" className={\"mx-auto mt-3\"}>\n                        {/* <ListItems data={\"\"}/> */}\n                        {this.renderSearchResult()}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    \n}\n\nexport default Home","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { GlobalStyles } from './Global'\nimport { lightTheme, darkTheme } from './theme';\n\nimport Home from './pages/Home'\n\nconsole.log(lightTheme)\nconst App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div>\n        <GlobalStyles />\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}